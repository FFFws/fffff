{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"D:\\\\\\u4E09\\u9636\\u6BB5\\\\\\u9EC4\\u9A8F\\u5EFA-23-\\u4E09\\u9636\\u6BB5\\\\\\u7532\\\\fffff\\\\admin\\\\src\\\\pages\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport styles from './login.model.less';\nimport { UserLogin } from '../../api/user';\n\nclass Login extends Component {\n  setLocal() {\n    let info = JSON.stringify({\n      err: 0,\n      msg: 'ok',\n      token: '12313',\n      rootIds: ['1', '0', '2-0', '2-0', '2-3']\n    });\n    localStorage.setItem('info', info);\n  }\n\n  login(userName, passWord) {\n    UserLogin(userName, passWord).then(data => {\n      console.log(data);\n    });\n    this.setLocal.bind(this);\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsValue\n    } = this.props.form;\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      className: \"card\",\n      title: \"\\u767B\\u5F55\\u4FE1\\u606F\",\n      extra: React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"\\u6CE8\\u518C\"),\n      style: {\n        width: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, getFieldDecorator('userName：', {\n      rules: [{\n        required: true,\n        message: '用户名为手机号'\n      }, {\n        pattern: /^[1][3,4,5,7,8][0-9]{9}$/,\n        message: '请填写正确的手机号码'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,1)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u5BC6\\u7801\\uFF1A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, getFieldDecorator('passWord', {\n      rules: [{\n        required: true,\n        message: '密码至少包含 数字和英文，长度6-20',\n        pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,1)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: () => {\n        let {\n          userName,\n          passWord\n        } = getFieldsValue();\n        console.log(userName, passWord);\n        this.login(userName, passWord);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\"), getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(_Checkbox, {\n      style: {\n        marginLeft: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u8BB0\\u4F4F\\u5BC6\\u7801\")))));\n  }\n\n}\n\nexport default _Form.create({})(Login);","map":{"version":3,"sources":["D:/三阶段/黄骏建-23-三阶段/甲/fffff/admin/src/pages/Login/Login.js"],"names":["React","Component","styles","UserLogin","Login","setLocal","info","JSON","stringify","err","msg","token","rootIds","localStorage","setItem","login","userName","passWord","then","data","console","log","bind","render","getFieldDecorator","getFieldsValue","props","form","width","rules","required","message","pattern","color","valuePropName","initialValue","marginLeft","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Icon, Input, Button, Checkbox, Card } from 'antd';\r\nimport styles from './login.model.less'\r\nimport { UserLogin } from '../../api/user'\r\n\r\nclass Login extends Component {\r\n    setLocal() {\r\n        let info = JSON.stringify({ err: 0, msg: 'ok', token: '12313', rootIds: ['1', '0', '2-0', '2-0', '2-3'] })\r\n        localStorage.setItem('info', info)\r\n    }\r\n    login(userName, passWord) {\r\n        UserLogin(userName, passWord)\r\n            .then(data => {\r\n                console.log(data)\r\n            })\r\n        this.setLocal.bind(this)\r\n    }\r\n    render() {\r\n        const { getFieldDecorator, getFieldsValue } = this.props.form;\r\n        return (\r\n            <div className='login'>\r\n                <Card className='card' title=\"登录信息\" extra={<a href=\"#\">注册</a>} style={{ width: 400 }}>\r\n                    <Form.Item label=\"用户名\" >\r\n                        {getFieldDecorator('userName：', {\r\n                            rules: [\r\n                                { required: true, message: '用户名为手机号' },\r\n                                { pattern: /^[1][3,4,5,7,8][0-9]{9}$/, message: '请填写正确的手机号码' }\r\n                            ],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,1)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"密码：\">\r\n                        {getFieldDecorator('passWord', {\r\n                            rules: [{ required: true, message: '密码至少包含 数字和英文，长度6-20', pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/ }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,1)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" onClick={() => {\r\n                            \r\n                            let { userName, passWord } = getFieldsValue()\r\n                            console.log(userName, passWord)\r\n                            this.login(userName, passWord)\r\n                        }}>\r\n                            登录\r\n                    </Button>\r\n                        {getFieldDecorator('remember', {\r\n                            valuePropName: 'checked',\r\n                            initialValue: true,\r\n                        })(<Checkbox style={{ marginLeft: 20 }}>记住密码</Checkbox>)}\r\n\r\n                    </Form.Item>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form.create({})(Login)"]},"metadata":{},"sourceType":"module"}