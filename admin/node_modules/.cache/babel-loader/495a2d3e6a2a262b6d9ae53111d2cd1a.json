{"ast":null,"code":"import \"antd/lib/dropdown/style\";\nimport _Dropdown from \"antd/lib/dropdown\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"D:\\\\\\u4E09\\u9636\\u6BB5\\\\\\u9EC4\\u9A8F\\u5EFA-23-\\u4E09\\u9636\\u6BB5\\\\\\u7532\\\\fffff\\\\admin\\\\src\\\\components\\\\Dropdown\\\\HeaderDropdown.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { UserLogout } from '../../api/user';\nimport { clearStorage } from '../../utils/storage';\nconst menuData = [{\n  path: '/admin/userinfo',\n  name: '个人中心',\n  icon: 'user'\n}, {\n  path: '/admin/info',\n  name: '我的消息',\n  icon: 'home',\n  type: 'bad'\n}, {\n  path: '/login',\n  name: '退出登录',\n  icon: 'user'\n}];\n\nclass HeaderDropdown extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderNav = menuData => {\n      return React.createElement(_Menu, {\n        onClick: e => {\n          this.toggle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, menuData.map(item => {\n        if (item.type) {\n          return React.createElement(_Menu.Item, {\n            key: item.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(_Badge, {\n            count: React.createElement(_Icon, {\n              type: \"clock-circle\",\n              style: {\n                color: '#f5222d'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, item.name)));\n        } else {\n          return React.createElement(_Menu.Item, {\n            key: item.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(_Icon, {\n            type: item.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, item.name));\n        }\n      }));\n    };\n  }\n\n  toggle(e) {\n    switch (e.key) {\n      case '/admin/userinfo':\n        _message.success('跳转个人中心', 2);\n\n        break;\n\n      case '/admin/info':\n        _message.success('跳转我的消息', 1, () => {\n          this.props.history.push(e.key);\n        });\n\n        break;\n\n      case '/login':\n        _message.success('退出成功', 1, this.logout(e.key));\n\n        break;\n    }\n  }\n\n  logout(url) {\n    UserLogout().then(data => {\n      clearStorage();\n      this.props.history.replace(url);\n    });\n  }\n\n  render() {\n    return React.createElement(_Dropdown, {\n      overlay: this.renderNav(menuData),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginRight: 40\n      },\n      className: \"ant-dropdown-link\",\n      onClick: e => e.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, localStorage.getItem('userName'), \" \", React.createElement(_Icon, {\n      type: \"down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(HeaderDropdown);","map":{"version":3,"sources":["D:/三阶段/黄骏建-23-三阶段/甲/fffff/admin/src/components/Dropdown/HeaderDropdown.js"],"names":["React","Component","withRouter","UserLogout","clearStorage","menuData","path","name","icon","type","HeaderDropdown","renderNav","e","toggle","map","item","color","key","success","props","history","push","logout","url","then","data","replace","render","marginRight","preventDefault","localStorage","getItem"],"mappings":"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","sourcesContent":["/** \r\n * @顶部导航\r\n * 点击登出，退出界面\r\n * 从状态管理内获取数据（过滤出状态为未读的信息数量），显示小标，未读信息，点击跳转页面\r\n * \r\n * */\r\n\r\nimport { Menu, Dropdown, Icon, message, Popconfirm, Badge } from 'antd';\r\nimport React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { UserLogout } from '../../api/user'\r\nimport { clearStorage } from '../../utils/storage'\r\nconst menuData = [\r\n    { path: '/admin/userinfo', name: '个人中心', icon: 'user' },\r\n    { path: '/admin/info', name: '我的消息', icon: 'home', type: 'bad' },\r\n    { path: '/login', name: '退出登录', icon: 'user' }\r\n]\r\n\r\nclass HeaderDropdown extends Component {\r\n    toggle(e) {\r\n        switch (e.key) {\r\n            case '/admin/userinfo':\r\n                message.success('跳转个人中心', 2)\r\n                break;\r\n            case '/admin/info':\r\n                message.success('跳转我的消息', 1, () => {\r\n                    this.props.history.push(e.key)\r\n                })\r\n                break;\r\n            case '/login':\r\n                message.success('退出成功', 1, this.logout(e.key))\r\n                break;\r\n        }\r\n    }\r\n    logout(url) {\r\n        UserLogout()\r\n            .then(data => {\r\n                clearStorage()\r\n                this.props.history.replace(url)\r\n            })\r\n    }\r\n\r\n    renderNav = (menuData) => {\r\n        return (\r\n            <Menu onClick={(e) => { this.toggle(e) }}>\r\n\r\n                {menuData.map((item) => {\r\n                    if (item.type) {\r\n                        return (\r\n                            <Menu.Item key={item.path}>\r\n                                {/* <span> */}\r\n                                <Badge\r\n                                    count={<Icon type=\"clock-circle\" style={{ color: '#f5222d' }} />}\r\n                                >\r\n                                    {/* <Icon type={item.icon}></Icon> */}\r\n                                    <span>{item.name}</span>\r\n                                </Badge>\r\n\r\n                                {/* </span> */}\r\n                            </Menu.Item>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Menu.Item key={item.path}>\r\n                                {/* <span> */}\r\n                                <Icon type={item.icon}></Icon>\r\n                                <span>{item.name}</span>\r\n                                {/* </span> */}\r\n                            </Menu.Item>\r\n                        )\r\n                    }\r\n                })}\r\n            </Menu>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <Dropdown overlay={this.renderNav(menuData)}>\r\n                <div style={{ marginRight: 40 }} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                    {localStorage.getItem('userName')} <Icon type=\"down\" />\r\n                </div>\r\n            </Dropdown>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HeaderDropdown) \r\n"]},"metadata":{},"sourceType":"module"}