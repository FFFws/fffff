{"ast":null,"code":"import Prevstate from './state';\nimport * as types from './action-type';\nimport { connect } from 'react-redux';\nexport default ((state = Prevstate, {\n  type,\n  params\n}) => {\n  let newData = JSON.parse(JSON.stringify(state));\n\n  switch (type) {\n    case types.READ_ALL:\n      newData.list.forEach(item => {\n        item.bool = false;\n      });\n      console.log(newData);\n      newData.list = arr;\n      break;\n\n    case types.READ_ONE:\n      newData.list[params].bool = false;\n      break;\n\n    case types.START:\n      newData.status = true;\n      break;\n\n    case types.END:\n      newData.status = false;\n      break;\n\n    default:\n  }\n\n  return newData;\n});","map":{"version":3,"sources":["D:/三阶段/黄骏建-23-三阶段/甲/fffff/admin/src/store/reducer.js"],"names":["Prevstate","types","connect","state","type","params","newData","JSON","parse","stringify","READ_ALL","list","forEach","item","bool","console","log","arr","READ_ONE","START","status","END"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,SAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,gBAAe,CAACC,KAAK,GAAGH,SAAT,EAAoB;AAAEI,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,KAAyC;AACpD,MAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAd;;AAEA,UAAQC,IAAR;AACI,SAAKH,KAAK,CAACS,QAAX;AACIJ,MAAAA,OAAO,CAACK,IAAR,CAAaC,OAAb,CAAsBC,IAAD,IAAU;AAC3BA,QAAAA,IAAI,CAACC,IAAL,GAAY,KAAZ;AACH,OAFD;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACAA,MAAAA,OAAO,CAACK,IAAR,GAAeM,GAAf;AACA;;AACJ,SAAKhB,KAAK,CAACiB,QAAX;AACIZ,MAAAA,OAAO,CAACK,IAAR,CAAaN,MAAb,EAAqBS,IAArB,GAA4B,KAA5B;AACA;;AACJ,SAAKb,KAAK,CAACkB,KAAX;AACIb,MAAAA,OAAO,CAACc,MAAR,GAAe,IAAf;AACA;;AACJ,SAAKnB,KAAK,CAACoB,GAAX;AACIf,MAAAA,OAAO,CAACc,MAAR,GAAe,KAAf;AACA;;AACJ;AAjBJ;;AAmBA,SAAOd,OAAP;AACH,CAvBD","sourcesContent":["import Prevstate from './state'\r\nimport * as types from './action-type'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nexport default (state = Prevstate, { type, params }) => {\r\n    let newData = JSON.parse(JSON.stringify(state))\r\n\r\n    switch (type) {\r\n        case types.READ_ALL:\r\n            newData.list.forEach((item) => {\r\n                item.bool = false\r\n            })\r\n            console.log(newData)\r\n            newData.list = arr\r\n            break;\r\n        case types.READ_ONE:\r\n            newData.list[params].bool = false\r\n            break;\r\n        case types.START:\r\n            newData.status=true\r\n            break;\r\n        case types.END:\r\n            newData.status=false\r\n            break;\r\n        default:\r\n    }\r\n    return newData\r\n}\r\n"]},"metadata":{},"sourceType":"module"}