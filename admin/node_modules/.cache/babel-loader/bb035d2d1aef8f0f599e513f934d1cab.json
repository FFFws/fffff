{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nvar _jsxFileName = \"D:\\\\\\u4E09\\u9636\\u6BB5\\\\\\u9EC4\\u9A8F\\u5EFA-23-\\u4E09\\u9636\\u6BB5\\\\\\u7532\\\\fffff\\\\admin\\\\src\\\\pages\\\\Login\\\\Login.js\";\n\n/**\r\n * @登陆界面\r\n * 页面布局\r\n * 信息验证\r\n * 点击/回车事件提交信息，调取接口，取回token\r\n * 存储token，username\r\n * \r\n * 七天免登录\r\n * 存token，存储时间，有效时间\r\n * 每次调取接口，先判断有效期，在携带token\r\n * */\nimport React, { Component } from 'react';\nimport styles from './login.model.less';\nimport { UserLogin } from '../../api/user';\nimport { setStorage } from '../../utils/storage';\n\nclass Login extends Component {\n  login(userName, passWord) {\n    let {\n      getFieldsValue,\n      validateFields\n    } = this.props.form;\n    validateFields((err, data) => {\n      if (err) return _message.error('输入有误，请重试', 2);\n      let {\n        userName,\n        passWord\n      } = data;\n      console.log(err, data);\n      UserLogin(userName, passWord).then(res => {\n        setStorage(res);\n        localStorage.setItem('userName', userName);\n\n        _message.success('登陆成功，1s后跳转', 1, () => {\n          this.props.history.replace('/admin/home');\n        });\n      }).catch(err => {\n        _message.error('登陆失败，请重试', 2);\n      });\n    });\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsValue\n    } = this.props.form;\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      className: \"card\",\n      title: \"\\u767B\\u5F55\\u4FE1\\u606F\",\n      extra: React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"\\u6CE8\\u518C\"),\n      style: {\n        width: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      label: \"\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: '用户名root'\n      }, {\n        min: 4,\n        message: '请填写root'\n      }, {\n        max: 4,\n        message: '请填写root'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,1)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      label: \"\\u5BC6\\u7801\\uFF1A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, getFieldDecorator('passWord', {\n      rules: [{\n        required: true,\n        message: '密码123'\n      }, {\n        min: 3,\n        message: '密码123'\n      }, {\n        max: 3,\n        message: '密码123'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,1)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      onKeyDown: e => {\n        if (e.keyCode == 13) {\n          this.login();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: () => {\n        // let { userName, passWord } = getFieldsValue()\n        this.login();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\"), getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(_Checkbox, {\n      style: {\n        marginLeft: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\u8BB0\\u4F4F\\u5BC6\\u7801\")))));\n  }\n\n}\n\nexport default _Form.create({})(Login);","map":{"version":3,"sources":["D:/三阶段/黄骏建-23-三阶段/甲/fffff/admin/src/pages/Login/Login.js"],"names":["React","Component","styles","UserLogin","setStorage","Login","login","userName","passWord","getFieldsValue","validateFields","props","form","err","data","error","console","log","then","res","localStorage","setItem","success","history","replace","catch","render","getFieldDecorator","width","rules","required","message","min","max","color","e","keyCode","valuePropName","initialValue","marginLeft","create"],"mappings":"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","sourcesContent":["/**\r\n * @登陆界面\r\n * 页面布局\r\n * 信息验证\r\n * 点击/回车事件提交信息，调取接口，取回token\r\n * 存储token，username\r\n * \r\n * 七天免登录\r\n * 存token，存储时间，有效时间\r\n * 每次调取接口，先判断有效期，在携带token\r\n * */ \r\n\r\n\r\n\r\nimport React, { Component } from 'react'\r\nimport { Form, Icon, Input, Button, Checkbox, Card, message } from 'antd';\r\nimport styles from './login.model.less'\r\nimport { UserLogin } from '../../api/user'\r\nimport { setStorage } from '../../utils/storage'\r\n\r\nclass Login extends Component {\r\n    login(userName, passWord) {\r\n        let { getFieldsValue, validateFields } = this.props.form\r\n        validateFields((err, data) => {\r\n            if (err) return message.error('输入有误，请重试', 2)\r\n\r\n            let { userName, passWord } = data\r\n            \r\n            console.log(err,data)\r\n            UserLogin(userName, passWord)\r\n                .then(res => {\r\n                    setStorage(res)\r\n                    localStorage.setItem('userName', userName)\r\n                    message.success('登陆成功，1s后跳转', 1, () => {\r\n                        this.props.history.replace('/admin/home')\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    message.error('登陆失败，请重试', 2)\r\n                })\r\n        })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator, getFieldsValue } = this.props.form;\r\n        return (\r\n            <div className='login'>\r\n                <Card className='card' title=\"登录信息\" extra={<a href=\"#\">注册</a>} style={{ width: 400 }}>\r\n                    <Form.Item label=\"用户名\" >\r\n                        {getFieldDecorator('userName', {\r\n                            rules: [\r\n                                { required: true, message: '用户名root' },\r\n                                { min: 4, message: '请填写root' },\r\n                                { max: 4, message: '请填写root' }\r\n                            ],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,1)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"密码：\">\r\n                        {getFieldDecorator('passWord', {\r\n                            rules: [\r\n                                { required: true, message: '密码123' },\r\n                                { min: 3, message: '密码123' },\r\n                                { max: 3, message: '密码123' }\r\n                            ]\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,1)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onKeyDown={(e) => {\r\n                                    if (e.keyCode == 13) {\r\n                                        this.login()\r\n                                    }\r\n                                }}\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" onClick={() => {\r\n                            // let { userName, passWord } = getFieldsValue()\r\n                            this.login()\r\n                        }}>\r\n                            登录\r\n                    </Button>\r\n                        {getFieldDecorator('remember', {\r\n                            valuePropName: 'checked',\r\n                            initialValue: true,\r\n                        })(<Checkbox style={{ marginLeft: 20 }}>记住密码</Checkbox>)}\r\n                    </Form.Item>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form.create({})(Login)\r\n\r\n"]},"metadata":{},"sourceType":"module"}