{"ast":null,"code":"import \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nimport \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nvar _jsxFileName = \"D:\\\\\\u4E09\\u9636\\u6BB5\\\\\\u9EC4\\u9A8F\\u5EFA-23-\\u4E09\\u9636\\u6BB5\\\\\\u7532\\\\fffff\\\\admin\\\\src\\\\pages\\\\Info\\\\Info.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport actionCreator from '../../store/actionCreator';\n\nclass Info extends Component {\n  render() {\n    let {\n      list,\n      changebool,\n      changeAllbool,\n      status\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(_Spin, {\n      tip: \"Loading...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(_Alert, {\n      type: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginBottom: 16,\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"\\u4E2A\\u4EBA\\u6D88\\u606F\"), list.some(item => {\n      return item.bool === true;\n    }) ? React.createElement(\"button\", {\n      onClick: () => {\n        changeAllbool();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"\\u5168\\u90E8\\u6807\\u8BB0\\u4E3A\\u5DF2\\u8BFB\") : ''), React.createElement(_List, {\n      bordered: true,\n      dataSource: list,\n      renderItem: (item, index) => React.createElement(_List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(_Typography.Text, {\n        mark: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, item.type), \" \", item.info, item.bool ? React.createElement(\"button\", {\n        onClick: () => {\n          changebool(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"\\u6807\\u8BB0\\u4E3A\\u5DF2\\u8BFB\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"\\u5DF2\\u8BFB\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => state, dispatch => {\n  return bindActionCreators(actionCreator, dispatch);\n})(Info); //个人消息渲染页面\n// 1. 获取数据存到stote1111111111111111\n// 2. 渲染111111111111\n// 3. 根据状态确定是否标记，以及已读按钮11111111111111\n// 4. 点击按钮，设置为已读——状态切换过程中，有加载显示\n// 5. 全部已读11111\n// 6. 个人信息处显示小标\n// 7. 一键清空","map":{"version":3,"sources":["D:/三阶段/黄骏建-23-三阶段/甲/fffff/admin/src/pages/Info/Info.js"],"names":["React","Component","bindActionCreators","connect","actionCreator","Info","render","list","changebool","changeAllbool","status","props","marginBottom","display","justifyContent","some","item","bool","index","type","info","state","dispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAGA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,UAAR;AAAoBC,MAAAA,aAApB;AAAmCC,MAAAA;AAAnC,QAA8C,KAAKC,KAAvD;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,GAAG,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAMI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE,EAAhB;AAAoBC,QAAAA,OAAO,EAAE,MAA7B;AAAqCC,QAAAA,cAAc,EAAE;AAArD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEKP,IAAI,CAACQ,IAAL,CAAWC,IAAD,IAAU;AACjB,aAAOA,IAAI,CAACC,IAAL,KAAc,IAArB;AACH,KAFA,IAEI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACxBR,QAAAA,aAAa;AAChB,OAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFJ,GAIqB,EAN1B,CANJ,EAeI;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,UAAU,EAAEF,IAFhB;AAGI,MAAA,UAAU,EAAE,CAACS,IAAD,EAAOE,KAAP,KACR,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,gCAAY,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBF,IAAI,CAACG,IAA5B,CADJ,OACyDH,IAAI,CAACI,IAD9D,EAEKJ,IAAI,CAACC,IAAL,GAAY;AAAQ,QAAA,OAAO,EAAE,MAAM;AAChCT,UAAAA,UAAU,CAACU,KAAD,CAAV;AAEH,SAHY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAZ,GAGmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALxB,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADJ;AA+BH;;AAlCwB;;AAoC7B,eAAef,OAAO,CAACkB,KAAK,IAAIA,KAAV,EAAkBC,QAAD,IAAc;AACjD,SAAOpB,kBAAkB,CAACE,aAAD,EAAgBkB,QAAhB,CAAzB;AACH,CAFqB,CAAP,CAEZjB,IAFY,CAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport actionCreator from '../../store/actionCreator'\r\nimport { List, Typography, Spin, Icon, Alert } from 'antd';\r\n\r\nclass Info extends Component {\r\n    render() {\r\n        let { list, changebool, changeAllbool, status } = this.props\r\n        return (\r\n            <div>\r\n                <Spin tip=\"Loading...\">\r\n                    <Alert\r\n                        type=\"info\"\r\n                    />\r\n                </Spin>\r\n                <div style={{ marginBottom: 16, display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>个人消息</span>\r\n                    {list.some((item) => {\r\n                        return item.bool === true\r\n                    }) ? <button onClick={() => {\r\n                        changeAllbool()\r\n                    }}>全部标记为已读</button> : ''}\r\n\r\n                </div>\r\n                <List\r\n                    bordered\r\n                    dataSource={list}\r\n                    renderItem={(item, index) => (\r\n                        <List.Item>\r\n                            <Typography.Text mark>{item.type}</Typography.Text> {item.info}\r\n                            {item.bool ? <button onClick={() => {\r\n                                changebool(index)\r\n\r\n                            }}>标记为已读</button> : <span>已读</span>}\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(state => state, (dispatch) => {\r\n    return bindActionCreators(actionCreator, dispatch)\r\n})(Info)\r\n\r\n//个人消息渲染页面\r\n// 1. 获取数据存到stote1111111111111111\r\n// 2. 渲染111111111111\r\n// 3. 根据状态确定是否标记，以及已读按钮11111111111111\r\n// 4. 点击按钮，设置为已读——状态切换过程中，有加载显示\r\n// 5. 全部已读11111\r\n// 6. 个人信息处显示小标\r\n// 7. 一键清空"]},"metadata":{},"sourceType":"module"}