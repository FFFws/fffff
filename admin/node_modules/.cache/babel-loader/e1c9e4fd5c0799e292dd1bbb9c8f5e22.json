{"ast":null,"code":"import \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nvar _jsxFileName = \"D:\\\\\\u4E09\\u9636\\u6BB5\\\\\\u9EC4\\u9A8F\\u5EFA-23-\\u4E09\\u9636\\u6BB5\\\\\\u7532\\\\fffff\\\\admin\\\\src\\\\components\\\\Asider\\\\AsiderNav.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getNav } from './asiderFun';\nimport { getStorage } from '../../utils/storage';\nconst {\n  SubMenu\n} = _Menu;\n\nclass AsiderNav extends Component {\n  constructor() {\n    super();\n\n    this.onOpenChange = openKeys => {\n      const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\n\n      if (this.state.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n        this.setState({\n          openKeys\n        });\n      } else {\n        this.setState({\n          openKeys: latestOpenKey ? [latestOpenKey] : []\n        });\n      }\n    };\n\n    this.link = ({\n      key\n    }) => {\n      this.props.history.push(key);\n    };\n\n    this.state = {\n      navList: [],\n      openKeys: ['sub1'],\n      rootSubmenuKeys: ['sub1', 'sub2', 'sub4']\n    };\n  }\n\n  componentDidMount() {\n    if (getStorage()) {\n      let info = getStorage();\n      getNav(info).then(data => {\n        this.setState({\n          navList: data\n        });\n      });\n    }\n  }\n\n  renderNav(list) {\n    if (!list.length) {\n      return '暂无数据';\n    }\n\n    let result = list.map((item, index) => {\n      if (!item.children) {\n        return React.createElement(_Menu.Item, {\n          key: item.path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: item.icon || 'home',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, item.name || '为加载出数据'));\n      } else {\n        return React.createElement(SubMenu, {\n          key: item.id,\n          title: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(_Icon, {\n            type: item.icon || 'home',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, item.name)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, this.renderNav(item.children));\n      }\n    });\n    return result;\n  }\n\n  render() {\n    let {\n      navList\n    } = this.state;\n    return React.createElement(_Menu, {\n      mode: \"inline\",\n      theme: \"dark\",\n      openKeys: this.state.openKeys,\n      onOpenChange: this.onOpenChange,\n      onClick: this.link,\n      style: {\n        overflow: 'auto',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.renderNav(navList));\n  }\n\n}\n\nexport default withRouter(AsiderNav);","map":{"version":3,"sources":["D:/三阶段/黄骏建-23-三阶段/甲/fffff/admin/src/components/Asider/AsiderNav.js"],"names":["React","Component","withRouter","getNav","getStorage","SubMenu","AsiderNav","constructor","onOpenChange","openKeys","latestOpenKey","find","key","state","indexOf","rootSubmenuKeys","setState","link","props","history","push","navList","componentDidMount","info","then","data","renderNav","list","length","result","map","item","index","children","path","icon","name","id","render","overflow","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Menu, Icon, message } from 'antd';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getNav } from './asiderFun'\r\nimport { getStorage } from '../../utils/storage'\r\nconst { SubMenu } = Menu;\r\n\r\nclass AsiderNav extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            navList: [],\r\n            openKeys: ['sub1'],\r\n            rootSubmenuKeys: ['sub1', 'sub2', 'sub4']\r\n        }\r\n    }\r\n\r\n    onOpenChange = openKeys => {\r\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\r\n        if (this.state.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            this.setState({ openKeys });\r\n        } else {\r\n            this.setState({\r\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\r\n            });\r\n        }\r\n    };\r\n    link = ({ key }) => {\r\n        this.props.history.push(key)\r\n    }\r\n    componentDidMount() {\r\n        if (getStorage()) {\r\n            let info = getStorage()\r\n            getNav(info).then(data => {\r\n                this.setState({ navList: data })\r\n            })\r\n        }\r\n    }\r\n    renderNav(list) {\r\n        if (!list.length) { return '暂无数据' }\r\n        let result = list.map((item, index) => {\r\n            if (!item.children) {\r\n                return (\r\n                    <Menu.Item key={item.path} >\r\n                        {/* <Link to={item.path}> */}\r\n                        <Icon type={item.icon || 'home'}></Icon>\r\n                        <span>{item.name || '为加载出数据'}</span>\r\n                        {/* </Link> */}\r\n                    </Menu.Item>\r\n                )\r\n            } else {\r\n                return (\r\n                    <SubMenu\r\n                        key={item.id}\r\n                        title={\r\n                            <span>\r\n                                <Icon type={item.icon || 'home'}></Icon>\r\n                                <span>{item.name}</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        {this.renderNav(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }\r\n        })\r\n        return result\r\n    }\r\n    render() {\r\n        let { navList } = this.state\r\n        return (\r\n            <Menu\r\n                mode=\"inline\"\r\n                theme='dark'\r\n                openKeys={this.state.openKeys}\r\n                onOpenChange={this.onOpenChange}\r\n                onClick={this.link}\r\n                style={{\r\n                    overflow: 'auto',\r\n                    height: '100vh',\r\n                }}>\r\n                {this.renderNav(navList)}\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(AsiderNav)"]},"metadata":{},"sourceType":"module"}