{"ast":null,"code":"import \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nvar _jsxFileName = \"D:\\\\\\u4E09\\u9636\\u6BB5\\\\\\u9EC4\\u9A8F\\u5EFA-23-\\u4E09\\u9636\\u6BB5\\\\\\u7532\\\\fffff\\\\admin\\\\src\\\\pages\\\\Info\\\\Info.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport actionCreator from '../../store/actionCreator';\nconst data = [1, 2, 3];\n\nclass Info extends Component {\n  render() {\n    let {\n      list\n    } = this.props;\n    console.log(list);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"\\u4E2A\\u4EBA\\u6D88\\u606F\"), React.createElement(_List, {\n      bordered: true,\n      dataSource: data,\n      renderItem: item => React.createElement(_List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(_Typography.Text, {\n        mark: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"[ITEM]\"), \" \", item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => state, dispatch => {\n  return bindActionCreators(actionCreator, dispatch);\n})(Info); //个人消息渲染页面\n// 1. 获取数据存到stote\n// 2. 渲染\n// 3. 根据状态确定是否标记，以及已读按钮\n// 4. 点击按钮，设置为已读——状态切换过程中，有加载显示\n// 5. 全部已读\n// 6. 个人信息处显示小标\n// 7. 一键清空","map":{"version":3,"sources":["D:/三阶段/黄骏建-23-三阶段/甲/fffff/admin/src/pages/Info/Info.js"],"names":["React","Component","bindActionCreators","connect","actionCreator","data","Info","render","list","props","console","log","marginBottom","item","state","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAGA,MAAMC,IAAI,GAAG,CACT,CADS,EACN,CADM,EACH,CADG,CAAb;;AAGA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AACzBM,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAE;AAAEI,QAAAA,YAAY,EAAE;AAAhB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,UAAU,EAAEP,IAFhB;AAGI,MAAA,UAAU,EAAEQ,IAAI,IACZ,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,gCAAY,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OACoDA,IADpD,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAcH;;AAlBwB;;AAoB7B,eAAeV,OAAO,CAACW,KAAK,IAAIA,KAAV,EAAkBC,QAAD,IAAc;AACjD,SAAOb,kBAAkB,CAACE,aAAD,EAAgBW,QAAhB,CAAzB;AACH,CAFqB,CAAP,CAEZT,IAFY,CAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport actionCreator from '../../store/actionCreator'\r\nimport { List, Typography } from 'antd';\r\n\r\nconst data = [\r\n    1, 2, 3\r\n]\r\nclass Info extends Component {\r\n    render() {\r\n        let { list } = this.props\r\n        console.log(list)\r\n        return (\r\n            <div>\r\n                <h3 style={{ marginBottom: 16 }}>个人消息</h3>\r\n                <List\r\n                    bordered\r\n                    dataSource={data}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <Typography.Text mark>[ITEM]</Typography.Text> {item}\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(state => state, (dispatch) => {\r\n    return bindActionCreators(actionCreator, dispatch)\r\n})(Info)\r\n\r\n//个人消息渲染页面\r\n// 1. 获取数据存到stote\r\n// 2. 渲染\r\n// 3. 根据状态确定是否标记，以及已读按钮\r\n// 4. 点击按钮，设置为已读——状态切换过程中，有加载显示\r\n// 5. 全部已读\r\n// 6. 个人信息处显示小标\r\n// 7. 一键清空"]},"metadata":{},"sourceType":"module"}